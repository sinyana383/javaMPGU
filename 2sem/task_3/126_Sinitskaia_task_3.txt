QuickSort.java|12|int base = split(data, e, b); -> int base = split(data, b, e);|QuickSort_TwoElements_SuccessSort
QuickSort.java|24|swap(data, left, baseElem); -> swap(data, left - 1, baseElem);|QuickSort_TwoElements_SuccessSort
QuickSort.java|28|if(left < right) -> if (left < data.length && right < data.length)|QuickSort_TwoElements_SuccessSort
QuickSort.java|25|baseElem = left; -> baseElem = left - 1;|QuickSort_contrastParams_SuccessSort
QuickSort.java|29|swap(data, left + 1, right); -> swap(data, left , right);|QuickSort_contrastParams_SuccessSort
QuickSort.java|14|qSortRec(data, base + 2, e); -> qSortRec(data, base + 1, e);|QuickSort_contrastParams_SuccessSort
QuickSort.java|13|qSortRec(data, b, base - 2); -> qSortRec(data, b, base - 1);|QuickSort_contrastParams_SuccessSort

# MergeSorting
MergeSort.java|19|merge(buffer, sorting, begin, middle - begin, end - middle); -> merge(buffer, sorting, begin, middle - begin + 1, end - middle);|MergeSort_TwoElements_SuccessSort
MergeSort.java|35|else if (comparator.compare(from[firstFocus], from[secondFocus]) > 0) -> else if (comparator.compare(from[firstFocus], from[secondFocus]) < 0)|MergeSort_TwoElements_SuccessSort
MergeSort.java|34|to[resPos++] = from[firstFocus]; -> to[resPos++] = from[firstFocus++];|MergeSort_FourElements_SuccessSort
MergeSort.java|17|mergeSortRec(sorting, buffer begin, middle); -> mergeSortRec(buffer,sorting, begin, middle);|MergeSort_contrastParams_SuccessSort
MergeSort.java|18|mergeSortRec(sorting, buffer, middle + 1, end); -> mergeSortRec(buffer,sorting, middle + 1, end);|MergeSort_contrastParams_SuccessSort
